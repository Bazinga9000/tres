from .interactions import Interaction
from aiohttp import ClientWebSocketResponse
from typing import Any

__all__ = ['DiscordException', 'ClientException', 'NoMoreItems', 'GatewayNotFound', 'ValidationError', 'HTTPException', 'Forbidden', 'NotFound', 'DiscordServerError', 'InvalidData', 'InvalidArgument', 'LoginFailure', 'ConnectionClosed', 'PrivilegedIntentsRequired', 'InteractionResponded', 'ExtensionError', 'ExtensionAlreadyLoaded', 'ExtensionNotLoaded', 'NoEntryPointError', 'ExtensionFailed', 'ExtensionNotFound', 'ApplicationCommandError', 'CheckFailure', 'ApplicationCommandInvokeError']

class DiscordException(Exception): ...
class ClientException(DiscordException): ...
class NoMoreItems(DiscordException): ...

class GatewayNotFound(DiscordException):
    def __init__(self) -> None: ...

class ValidationError(DiscordException): ...

class HTTPException(DiscordException):
    response: _ResponseType
    status: int
    code: int
    text: str
    def __init__(self, response: _ResponseType, message: str | dict[str, Any] | None) -> None: ...

class Forbidden(HTTPException): ...
class NotFound(HTTPException): ...
class DiscordServerError(HTTPException): ...
class InvalidData(ClientException): ...
class InvalidArgument(ClientException): ...
class LoginFailure(ClientException): ...

class ConnectionClosed(ClientException):
    code: int
    reason: str
    shard_id: int | None
    def __init__(self, socket: ClientWebSocketResponse, *, shard_id: int | None, code: int | None = None) -> None: ...

class PrivilegedIntentsRequired(ClientException):
    shard_id: int | None
    def __init__(self, shard_id: int | None) -> None: ...

class InteractionResponded(ClientException):
    interaction: Interaction
    def __init__(self, interaction: Interaction) -> None: ...

class ExtensionError(DiscordException):
    name: str
    def __init__(self, message: str | None = None, *args: Any, name: str) -> None: ...

class ExtensionAlreadyLoaded(ExtensionError):
    def __init__(self, name: str) -> None: ...

class ExtensionNotLoaded(ExtensionError):
    def __init__(self, name: str) -> None: ...

class NoEntryPointError(ExtensionError):
    def __init__(self, name: str) -> None: ...

class ExtensionFailed(ExtensionError):
    original: Exception
    def __init__(self, name: str, original: Exception) -> None: ...

class ExtensionNotFound(ExtensionError):
    def __init__(self, name: str) -> None: ...

class ApplicationCommandError(DiscordException): ...
class CheckFailure(ApplicationCommandError): ...

class ApplicationCommandInvokeError(ApplicationCommandError):
    original: Exception
    def __init__(self, e: Exception) -> None: ...
