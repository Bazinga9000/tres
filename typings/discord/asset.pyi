import io
import os

__all__ = ['Asset']

class AssetMixin:
    url: str
    async def read(self) -> bytes: ...
    async def save(self, fp: str | bytes | os.PathLike | io.BufferedIOBase, *, seek_begin: bool = True) -> int: ...

class Asset(AssetMixin):
    BASE: str
    def __init__(self, state, *, url: str, key: str, animated: bool = False) -> None: ...
    def __len__(self) -> int: ...
    def __eq__(self, other): ...
    def __hash__(self): ...
    @property
    def url(self) -> str: ...
    @property
    def key(self) -> str: ...
    def is_animated(self) -> bool: ...
    def replace(self, *, size: int = ..., format: ValidAssetFormatTypes = ..., static_format: ValidStaticFormatTypes = ...) -> Asset: ...
    def with_size(self, size: int, /) -> Asset: ...
    def with_format(self, format: ValidAssetFormatTypes, /) -> Asset: ...
    def with_static_format(self, format: ValidStaticFormatTypes, /) -> Asset: ...
